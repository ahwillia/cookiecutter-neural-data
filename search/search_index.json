{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cookiecutter Data Science A barebones template for neural data analysis. Note: this cookiecutter template is an early work in progress. Why use this project structure? See cookiecutter-data-science and references/links therein for why thinking about project organization is important. This project template was adapted for neuroscience applications. In particular, this template sets a standard folder/directory structure for multi-subject data . Requirements Python 3.5+ cookiecutter Python package >= 1.4.0: pip install cookiecutter Starting a new project Starting a new project is as easy as running this command at the command line. No need to create a directory first, the cookiecutter will do it for you. cookiecutter https://github.com/ahwillia/cookiecutter-neural-data Directory structure \u251c\u2500\u2500 README.md <- The top-level README that appears on Github. \u2502 \u251c\u2500\u2500 data <- Folder containing all data. \u2502 \u2502 \u2502 \u251c\u2500\u2500 raw <- Sub-folder containing immutable raw data. \u2502 \u2502 \u2502 \u2514\u2500\u2500 processed <- Processed data in a standardized format folder structure. \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500 metadata.yml <- Specifies metadata shared across all subjects. \u2502 \u2502 \u2502 \u251c\u2500\u2500 subject_1 \u2502 \u2502 \u251c\u2500\u2500 metadata.yml <- Specifies metadata specific to subject 1. \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 session_1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 spikes.csv <- Multi-unit or spike sorted data. \u2502 \u2502 \u2502 \u251c\u2500\u2500 traces.csv <- All analog signals (e.g. Ca imaging, behavior tracking). \u2502 \u2502 \u2502 \u251c\u2500\u2500 events.csv <- Times for stimuli, rewards, response times. \u2502 \u2502 \u2502 \u2514\u2500\u2500 metadata.yml <- Specifies metadata specific to session 1, subject 1. \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 session_2 \u2502 \u2502 \u22ee \u2502 \u2502 \u2502 \u251c\u2500\u2500 subject_2 \u2502 \u22ee \u2502 \u251c\u2500\u2500 {{cookiecutter.project_name}} <- Source code for use in this project. \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py <- Makes src a Python module \u2502 \u251c\u2500\u2500 data.py <- Scripts to generate, download, or transform data. \u2502 \u251c\u2500\u2500 models.py <- Scripts for training models, or using them for prediction. \u2502 \u251c\u2500\u2500 visualize.py <- Scripts to create exploratory and results oriented visualizations \u2502 \u22ee \u2502 \u251c\u2500\u2500 results <- Folder containing model parameters, model predictions, etc. \u2502 \u251c\u2500\u2500 notebooks <- Jupyter notebooks for exploratory analyses. \u2502 \u251c\u2500\u2500 reports \u2502 \u251c\u2500\u2500 notes <- Technical notes and citations. \u2502 \u251c\u2500\u2500 paper <- Final publication. \u2502 \u2514\u2500\u2500 figures <- Scripts for generating each final figure. \u2502 \u251c\u2500\u2500 requirements.txt <- Lists required python libraries. \u251c\u2500\u2500 setup.py <- makes project installable (`python setup.py develop`) \u251c\u2500\u2500 .gitignore <- Specifies files for git to ignore (e.g. large data files) \u2514\u2500\u2500 LICENSE <- LICENSE file if you plan to make your code open source. Related Projects Ultimately, this project template will (hopefully) be integrated with other tools like neuroglia .","title":"Home"},{"location":"#cookiecutter-data-science","text":"A barebones template for neural data analysis. Note: this cookiecutter template is an early work in progress.","title":"Cookiecutter Data Science"},{"location":"#why-use-this-project-structure","text":"See cookiecutter-data-science and references/links therein for why thinking about project organization is important. This project template was adapted for neuroscience applications. In particular, this template sets a standard folder/directory structure for multi-subject data .","title":"Why use this project structure?"},{"location":"#requirements","text":"Python 3.5+ cookiecutter Python package >= 1.4.0: pip install cookiecutter","title":"Requirements"},{"location":"#starting-a-new-project","text":"Starting a new project is as easy as running this command at the command line. No need to create a directory first, the cookiecutter will do it for you. cookiecutter https://github.com/ahwillia/cookiecutter-neural-data","title":"Starting a new project"},{"location":"#directory-structure","text":"\u251c\u2500\u2500 README.md <- The top-level README that appears on Github. \u2502 \u251c\u2500\u2500 data <- Folder containing all data. \u2502 \u2502 \u2502 \u251c\u2500\u2500 raw <- Sub-folder containing immutable raw data. \u2502 \u2502 \u2502 \u2514\u2500\u2500 processed <- Processed data in a standardized format folder structure. \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500 metadata.yml <- Specifies metadata shared across all subjects. \u2502 \u2502 \u2502 \u251c\u2500\u2500 subject_1 \u2502 \u2502 \u251c\u2500\u2500 metadata.yml <- Specifies metadata specific to subject 1. \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 session_1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 spikes.csv <- Multi-unit or spike sorted data. \u2502 \u2502 \u2502 \u251c\u2500\u2500 traces.csv <- All analog signals (e.g. Ca imaging, behavior tracking). \u2502 \u2502 \u2502 \u251c\u2500\u2500 events.csv <- Times for stimuli, rewards, response times. \u2502 \u2502 \u2502 \u2514\u2500\u2500 metadata.yml <- Specifies metadata specific to session 1, subject 1. \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 session_2 \u2502 \u2502 \u22ee \u2502 \u2502 \u2502 \u251c\u2500\u2500 subject_2 \u2502 \u22ee \u2502 \u251c\u2500\u2500 {{cookiecutter.project_name}} <- Source code for use in this project. \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py <- Makes src a Python module \u2502 \u251c\u2500\u2500 data.py <- Scripts to generate, download, or transform data. \u2502 \u251c\u2500\u2500 models.py <- Scripts for training models, or using them for prediction. \u2502 \u251c\u2500\u2500 visualize.py <- Scripts to create exploratory and results oriented visualizations \u2502 \u22ee \u2502 \u251c\u2500\u2500 results <- Folder containing model parameters, model predictions, etc. \u2502 \u251c\u2500\u2500 notebooks <- Jupyter notebooks for exploratory analyses. \u2502 \u251c\u2500\u2500 reports \u2502 \u251c\u2500\u2500 notes <- Technical notes and citations. \u2502 \u251c\u2500\u2500 paper <- Final publication. \u2502 \u2514\u2500\u2500 figures <- Scripts for generating each final figure. \u2502 \u251c\u2500\u2500 requirements.txt <- Lists required python libraries. \u251c\u2500\u2500 setup.py <- makes project installable (`python setup.py develop`) \u251c\u2500\u2500 .gitignore <- Specifies files for git to ignore (e.g. large data files) \u2514\u2500\u2500 LICENSE <- LICENSE file if you plan to make your code open source.","title":"Directory structure"},{"location":"#related-projects","text":"Ultimately, this project template will (hopefully) be integrated with other tools like neuroglia .","title":"Related Projects"}]}